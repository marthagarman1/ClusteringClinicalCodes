@using Newtonsoft.Json
@model IEnumerable<ClinicalCodeClusteringWebApp.Models.CPTCats>
@inject IJsonHelper Json;


<html>
<head>
    <meta charset="utf-8"/>
    <title>Chart.js demo</title>
    <link rel="stylesheet" type="text/css" href="~/css/clinical_code.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/0.2.0/Chart.min.js" type="text/javascript"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Scatter Chart</title>


    <link href="../../assets/styles.css" rel="stylesheet"/>
    <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <link rel="stylesheet"
          href="http://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
    <script type="text/javascript"
            src="http://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript"
            src="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

    <style>

        #chart {
            background-color: aliceblue;
            margin: 35px auto;
            max-width: 650px;
        }

        .my-custom-scrollbar {
            height: 200px;
            overflow: auto;
            position: relative;
        }

        .table-wrapper-scroll-y { display: block; }
    
    </style>

</head>

<body>


<h1>Cluster Reports</h1>
<h2>Upload CSV of Claim Data</h2>


<div class="input-group">
    <form asp-controller="Home" asp-action="UploadFile" method="post"
          enctype="multipart/form-data">

        <input style="background: azure" type="file" name="file"/>
        <button accept=".csv" type="submit">Upload File</button>
        
    </form>

    <asp:FileUpload ID="FileUpload1" runat="server"/>
    <asp:Button Text="Upload"  OnClick="Upload" runat="server"/>

</div>


<div id="chart">

</div>


<script src="https://cdn.jsdelivr.net/npm/apexcharts@latest"></script>

<script>
    var options = {
        chart: {
            height: 400,
            type: 'scatter',
            zoom: {
                enabled: true,
                type: 'xy'
            }
        },

        series: [],
        xaxis: {
            tickAmount: 10,
            labels: {
                formatter: function(val) {
                    return parseFloat(val).toFixed(1);
                }
            }
        },
        yaxis: {
            tickAmount: 10,
            labels: {
                formatter: function(val) {
                    return parseFloat(val).toFixed(1);
                }
            }
        },
        legend: {
            show: true
        },
        dataLabels: {
            enabled: false,
            enabledOnSeries: true,
            textAnchor: 'middle',
            offsetX: 0,
            offsetY: 0,
            style: {
                fontSize: '14px',
                fontFamily: 'Helvetica, Arial, sans-serif',
                colors: undefined
            },
            dropShadow: {
                enabled: false,
                top: 1,
                left: 1,
                blur: 1,
                opacity: 0.45
            }
        
        },
        tooltip: {
            enabled: false
        }
    };


    console.log(@JsonConvert.SerializeObject(ViewBag.ChartData));


    d_data = @JsonConvert.SerializeObject(ViewBag.ChartData);


    d_series = @JsonConvert.SerializeObject(ViewBag.ChartSeries);


    d_centers = @JsonConvert.SerializeObject(ViewBag.ChartCenters);


    for (var i = 0; i < d_series.length; i ++) {
        if (options.series.length > d_series[i]) {
            options.series[d_series[i]].data.push([d_data[i][0], d_data[i][1], 0.075]);
        } else {
            for (var j = options.series.length; j <= d_series[i]; j++) {
                options.series.push({
                    name: "Cluster " + j,
                    data: [
                    ]
                });
            }
            i--;
        }
    }

    

    options.series.push({
        name: "Center",
        data: []
    });

    for (i = 0; i < d_centers.length; i++) {
        options.series[options.series.length - 1].data.push([d_centers[i][0], d_centers[i][1], 0.5]);
    }

    console.log(options);


    var chart = new ApexCharts(
        document.querySelector("#chart"),
        options
    );

    chart.render();

</script>


@if (ViewBag.ChartSeries != null && Model != null)

{
    <div class="table-wrapper-scroll-y my-custom-scrollbar">

        <table class="table table-bordered table-striped mb-0" style="background-color: aliceblue">

            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ClaimId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DrugAssay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Microbiology)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Chemistry)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DiseasePanels)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Hematology)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Immunology)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Urinalysis)
                </th>
                <th>
                    Clusters
                </th>
            </tr>
            </thead>
            <tbody>

            @{
                var list = Model.ToList();
                for (var i = 0; i < list.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].ClaimId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].DrugAssay)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].Microbiology)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].Chemistry)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].DiseasePanels)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].Hematology)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].Immunology)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => list[i].Urinalysis)
                        </td>
                        <td>
                        @ViewBag.ChartSeries[i]
                        <td>
                    </tr>
                }
            }
            </tbody>

        </table>

    </div>
}
</body>


</html>